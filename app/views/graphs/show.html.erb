<!DOCTYPE html>
<head>
	<meta charset="utf-8">
  <title>Pusher Test</title>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="http://js.pusher.com/2.1/pusher.min.js" type="text/javascript"></script>
</head>
<body id="graphbody">
	  <script type="text/javascript">
	    // Enable pusher logging - don't include this in production
	    Pusher.log = function(message) {
	      if (window.console && window.console.log) {
	        window.console.log(message);
	      }
	    };
//Making connection to pusher
	    var pusher = new Pusher('<%= ENV['PUSHER_KEY'] %>');	
		var channel = pusher.subscribe('<%= @graph.session_id.to_s %>');
	    channel.bind('my_event', function(data) {
		root = JSON.parse( data.message );
//Remove all svgs		
				d3.select("body").selectAll("svg").remove();
				
//Add weighing circle
				var totalweight = root.t_weight- root.weight				
				var dataset = {
				  numbers: [totalweight, root.weight],
				};
				var decimal = d3.format(".1f");
				var count = root.count;

				var width = 700,
				    height = 700,
				    radius = Math.min(width, height) / 2;

				var color =  d3.scale.category20();

				var pie = d3.layout.pie()
				    .sort(null);

				var arc = d3.svg.arc()
				    .innerRadius(radius - 200)
				    .outerRadius(radius - 100);

				var svg = d3.select("body").append("svg")
					.style("margin-left", "-25px")
				  .style("position", "fixed")
				    .attr("width", width)
				    .attr("height", height)
				    .append("g")
				    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
				 // Add a number of weighings.
					 svg.append("svg:text")
					      .attr("dy", ".35em")
					      .attr("text-anchor", "middle")
						  .style("font-weight","bold")
						  .style("font-size","32pt")
					      .text(count + " weighings");

				var path = svg.selectAll("path")
				    .data(pie(dataset.numbers))
				  .enter().append("path")
				    .attr("fill", function(d, i) { return color(d); })
				    .attr("d", arc);
				
				 var g = svg.selectAll(".arc")
				      .data(pie(dataset.numbers))
				    .enter().append("g")
				      .attr("class", "arc");
				
					 g.append("path")
					      .attr("d", arc)
					      .style("fill", function(d) { return color(d.data); });

					  g.append("text")
					      .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
					      .attr("dy", ".35em")
					      .style("text-anchor", "middle")
						  .style("font-weight","bold")
						  .style("font-size","16pt")
					      .text(function(d) { return decimal(d.data) + " ozs."; });
					
//Add daily average circle					
						var daily = 20.8 - root.weight
						var dataset2 = { numbers: [daily, root.weight],
						};

						var width = 700,
						    height = 700,
						    radius = Math.min(width, height) / 2;

						var color2 = d3.scale.category10();

						var pie = d3.layout.pie()
						    .sort(null);

						var arc = d3.svg.arc()
						    .innerRadius(radius - 200)
						    .outerRadius(radius - 100);

						var svg = d3.select("body").append("svg")
							.style("margin-left", "560px")
							.style("position", "fixed")
						    .attr("width", width)
						    .attr("height", height)
						    .append("g")
						    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
						
// Add a number of percentage of daily average waste.
						var percent = d3.format(".1%")
							 svg.append("svg:text")
							      .attr("dy", ".35em")
							      .attr("text-anchor", "middle")
								  .style("font-weight","bold")
								  .style("font-size","16pt")
							      .text(percent(root.weight / 20.8) + " of average daily waste");

						var path = svg.selectAll("path")
						    .data(pie(dataset2.numbers))
						  .enter().append("path")
						    .attr("fill", function(d, i) { return color2(i); })
						    .attr("d", arc);

						 var g = svg.selectAll(".arc")
						      .data(pie(dataset2.numbers))
						    .enter().append("g")
						      .attr("class", "arc");

							 g.append("path")
							      .attr("d", arc)
							      .style("fill", function(d) { return color2(d.data); 
								});

						g.append("text")
					      .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
					      .attr("dy", ".35em")
					      .style("text-anchor", "middle")
						  .style("font-weight","bold")
						  .style("font-size","16pt")
					      .text(function(d) { return decimal(d.data) + " ozs.";});
				
			//Add average waste bar graph
			
					var bardataset = [ { text: "your waste", number: root.weight },
					{text : "meal average", number: root.session_average},
					{text: "NCSU average", number: root.average }];
					
					//Width and height
					var barWidth = 100;
					var width = (barWidth + 30) * bardataset.length;
					var height = 300;

					var x = d3.scale.linear().domain([0, bardataset.length]).range([0, width]);
					var y = d3.scale.linear().domain([0, d3.max(bardataset, function(datum) { return datum.number; })]).
					  rangeRound([0, height - 100]);

					// add the canvas to the DOM
					var svg = d3.select("body").
					  append("svg").
					  attr("width", width).
					  attr("height", height + 30)
					  .style("margin-left", "1280px")
					  .style("margin-top", "-10px")
					  .style("position", "fixed");

					svg.selectAll("rect").
					  data(bardataset).
					  enter().
					  append("rect").
					  attr("x", function(datum, index) { return x(index); }).
					  attr("y", function(datum) { return height - y(datum.number); }).
					  attr("height", function(datum) { return y(datum.number); }).
					  attr("width", barWidth)
					  .attr("fill", function(d, i) { return color2(i); });
					
					svg.selectAll("text").
					  data(bardataset).
					  enter().
					  append("text").
					  attr("x", function(datum, index) { return x(index) + barWidth; }).
					  attr("y", function(datum) { return height - y(datum.number); }).
					  attr("dx", -barWidth/2).
					  attr("text-anchor", "middle").
					  text(function(datum) { return decimal(datum.number);})
					  .attr("font-family", "sans-serif")
					   .attr("font-size", "32pt")
					   .attr("fill", "black")
					  .style("font-weight","bold");
					
					svg.selectAll("text.yAxis").
					  data(bardataset).
					  enter().append("text").
					  attr("x", function(datum, index) { return x(index) + barWidth; }).
					  attr("y", height).
					  attr("dx", -barWidth/2).
					  attr("text-anchor", "middle").
					  attr("style", "font-size: 16; font-family: Helvetica, sans-serif")
					  .style("font-weight","bold").
					  text(function(datum) { return datum.text;}).
					  attr("transform", "translate(0, 18)").
					  attr("class", "yAxis");
					
					
//Add average duration bar graph
	
							var bardurationdata = [ { text: "your time", number: root.duration },
							{text : "meal avergae", number: root.session_duration_average},
							{text: "NCSU average", number: root.duration_average }];

							//Width and height
							var barWidth = 100;
							var width = (barWidth + 30) * bardurationdata.length;
							var height = 300;

							var x = d3.scale.linear().domain([0, bardurationdata.length]).range([0, width]);
							var y = d3.scale.linear().domain([0, d3.max(bardurationdata, function(datum) { return datum.number; })]).
							  rangeRound([0, height - 100]);

							// add the canvas to the DOM
							var svg = d3.select("body").
							  append("svg").
							  attr("width", width).
							  attr("height", height + 30)
							  .style("margin-left", "1280px")
							  .style("margin-top", "325px")
							  .style("position", "fixed");

							svg.selectAll("rect").
							  data(bardurationdata).
							  enter().
							  append("rect").
							  attr("x", function(datum, index) { return x(index); }).
							  attr("y", function(datum) { return height - y(datum.number); }).
							  attr("height", function(datum) { return y(datum.number); }).
							  attr("width", barWidth)
							  .attr("fill", function(d, i) { return color(i); });

							svg.selectAll("text").
							  data(bardurationdata).
							  enter().
							  append("text").
							  attr("x", function(datum, index) { return x(index) + barWidth; }).
							  attr("y", function(datum) { return height - y(datum.number); }).
							  attr("dx", -barWidth/2).
							  attr("text-anchor", "middle").
							  text(function(datum) { return decimal(datum.number);})
							  .attr("font-family", "sans-serif")
							   .attr("font-size", "32pt")
							   .attr("fill", "black")
							  .style("font-weight","bold");

							svg.selectAll("text.yAxis").
							  data(bardurationdata).
							  enter().append("text").
							  attr("x", function(datum, index) { return x(index) + barWidth; }).
							  attr("y", height).
							  attr("dx", -barWidth/2).
							  attr("text-anchor", "middle").
							  attr("style", "font-size: 16; font-family: Helvetica, sans-serif")
							  .style("font-weight","bold").
							  text(function(datum) { return datum.text;}).
							  attr("transform", "translate(0, 18)").
							  attr("class", "yAxis");
				
	    });
	
		
	  </script>